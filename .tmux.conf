# List of plugins
set-option -g @plugin 'tmux-plugins/tpm' # Tmux Plugin Manager
set-option -g @plugin 'tmux-plugins/tmux-sensible' # Set options that should be acceptable to everyone
set-option -g @plugin 'tmux-plugins/tmux-yank' # Copy to the system clipboard
set-option -g @plugin 'tmux-plugins/tmux-copycat' # Enable regex and predefined searches
set-option -g @plugin 'tmux-plugins/tmux-open' # Opening highlighted selection directly from copy mode
set-option -g @plugin 'Morantron/tmux-fingers' # Copy pasting with vimium/vimperator like hints
set-option -g @plugin 'tmux-plugins/tmux-cowboy' # Send a signal to a process running inside a current pane
set-option -g @plugin 'rickstaa/tmux-notify' # Notify you when processes are finished
set-option -g @plugin 'jaclu/tmux-menus' # Popup menus to help with managing your environment
set-option -g @plugin 'jimeh/tmuxifier' # Manage Tmux session, window and pane configurations with ease
# set-option -g @plugin 'seebi/tmux-colors-solarized' # Solarized theme
set-option -g @plugin 'jimeh/tmux-themepack' # A pack of various themes
set-option -g @plugin 'MunifTanjim/tmux-mode-indicator' # Display prompt indicating currently active mode
set-option -g @plugin 'tmux-plugins/tmux-prefix-highlight' # Highlight when you press prefix key
set-option -g @plugin 'tmux-plugins/tmux-resurrect' # Restore environment after system restart
set-option -g @plugin 'tmux-plugins/tmux-continuum' # Save environment continuously

# Configure 'tmux-fingers' plugin
set-option -g @fingers-compact-hints 0

# Configure 'tmux-notify' plugin
set-option -g @tnotify-sleep-duration 10
set-option -g @tnotify-prompt-suffixes '$,#,%,â†’'

# Configure 'tmux-menus' plugin
set-option -g @menus_trigger 'F9'

# Configure 'tmux-themepack' plugin
set-option -g @themepack 'powerline/default/gray'
set-option -g @themepack-status-left-area-left-format '#{tmux_mode_indicator}#{prefix_highlight}#[fg=#{@powerline-status-right-area-right-fg},bg=#{@powerline-status-right-area-right-bg},bold]'
set-option -g @themepack-status-left-area-middle-format '#S'
set-option -g @themepack-status-right-area-right-format '#(whoami)@#H'

# Configure 'tmux-mode-indicator' plugin (to match Powerline theme from 'tmux-themepack')
set-option -g @mode_indicator_prefix_prompt 'WAIT'
set-option -g @mode_indicator_copy_prompt 'COPY'
set-option -g @mode_indicator_sync_prompt 'SYNC'
set-option -g @mode_indicator_empty_prompt 'TMUX'
set-option -g @mode_indicator_prefix_mode_style 'bg=#{@powerline-color-grey-6},fg=#{@powerline-status-bg}'
set-option -g @mode_indicator_copy_mode_style 'bg=#{@powerline-color-grey-6},fg=#{@powerline-status-bg}'
set-option -g @mode_indicator_sync_mode_style 'bg=#{@powerline-color-grey-6},fg=#{@powerline-status-bg}'
set-option -g @mode_indicator_empty_mode_style 'bg=#{@powerline-color-grey-6},fg=#{@powerline-status-bg}'

# Configure 'tmux-prefix-highlight' plugin (to match Powerline theme from 'tmux-themepack')
set-option -g @prefix_highlight_output_prefix ' <'
set-option -g @prefix_highlight_output_suffix '>'
set-option -g @prefix_highlight_fg '#{@powerline-status-bg}'
set-option -g @prefix_highlight_bg '#{@powerline-color-grey-6}'

# Configure 'tmux-continuum' plugin
set-option -g @continuum-save-interval '10'

# Remap prefix from 'C-b' to 'C-a'
# unbind-key C-b
# set-option -g prefix C-a
# bind-key C-a send-prefix
# set-option -g prefix2 C-a

# Fix char+112 on prompt until libvte resolves the issue
# set-option -g terminal-overrides ',xterm*:Cr=\E]12;gray\007'

# Make Neovim happy
set-option -sa terminal-features ',xterm-256color:RGB'
# set-option -ga terminal-overrides ',xterm-256color:Tc'

# Make cursor blinking
set-option -g cursor-style blinking-block
set-option -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

# Default behaviour
set-option -g default-terminal 'tmux-256color'
set-window-option -g xterm-keys on
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set-option -sg escape-time 50

# Enable mouse selection and copy to clipboard
set-option -g mouse on
set-option -g set-clipboard external
bind-key -n MouseUp2Pane paste
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'xsel -i --clipboard'

# Add useful movements in copy mode
bind-key -T copy-mode-vi Home send-keys -X start-of-line
bind-key -T copy-mode-vi End send-keys -X end-of-line
bind-key -T copy-mode-vi S-Home send-keys -X history-top
bind-key -T copy-mode-vi S-End send-keys -X history-bottom

# Enabling Shift-PgUp & Shift-PgDown
bind-key -n S-Pageup copy-mode -u \; send-keys Pageup
bind-key -n S-Pagedown copy-mode \; send-keys Pagedown

# Scroll History
set-option -g history-limit 200000

# Clear both screen and history
bind-key -n C-l send-keys C-l \; run-shell 'sleep 0.1' \; clear-history

# Set ability to capture on start and restore on exit window data when running an application
set-window-option -g alternate-screen on

# Display
set-option -g base-index 1 # start windows numbering at 1
set-window-option -g pane-base-index 1 # make pane numbering consistent with windows
set-option -g renumber-windows on # renumber windows when a window is closed
set-option -g set-titles on # set terminal title
set-window-option -g automatic-rename off # don't rename window to reflect current program

# To allow creating new pane in same directory which you now stay in
bind-key c new-window -c '#{pane_current_path}'
bind-key | split-window -h -c '#{pane_current_path}'
bind-key \\ split-window -v -c '#{pane_current_path}'

# Move to last active window
bind-key Tab last-window

# Switch panes using Alt-arrow without prefix
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# Bindings for killing
bind-key ^ confirm-before -p 'kill-session #S? (y/n)' kill-session
bind-key & kill-window
bind-key x kill-pane

# Status line (configured if no any theme overrides status line)
set-option -g status-left-length 10
set-option -g status-left '[#S] '
set-option -g status-right-length 50
# set-option -g status-right '#{prefix_highlight} | cont: #{continuum_status} | %a %Y-%m-%d %H:%M | #{tmux_mode_indicator}'
set-option -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M | #{tmux_mode_indicator}'

# Initialize TMUX plugin manager (keep this at the very bottom of tmux.conf)
if-shell -b 'test ! -d ~/.tmux/plugins/tpm' {
  display-message -d 10000 'Installing TPM and plugins ...' ;
  run-shell 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm' ;
  if-shell 'test -d ~/.tmux/plugins/tpm' {
    if-shell '~/.tmux/plugins/tpm/tpm' {
      if-shell '~/.tmux/plugins/tpm/bin/install_plugins' {
        run-shell '~/.tmux/plugins/tpm/tpm' ;
        display-message 'TPM and plugins have been installed';
      } {
        display-message -d 3000 'Failed to install TPM/plugins';
      }
    } {
      display-message -d 3000 'Failed to install TPM/plugins';
    }
  } {
    display-message -d 3000 'Failed to install TPM/plugins';
  }
} {
  run-shell '~/.tmux/plugins/tpm/tpm'
}

# vim: set et sw=2 ts=2 sts=2
